name: Growatt Devices Collection

on:
  schedule:
    # Run every 15 minutes from 6 AM to 7 PM (UTC+7)
    - cron: "*/15 6-19 * * *"
  workflow_dispatch: # Manual trigger option

jobs:
  collect_devices:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"
          cache: "pip"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
          pip install -e .  # Install the package in development mode

      - name: Create output directories
        run: |
          # Create logs directory
          mkdir -p logs
          # Create directory for storing device data
          mkdir -p data/devices

      - name: Run devices collection script
        run: |
          # Add the current directory to PYTHONPATH
          export PYTHONPATH=$PYTHONPATH:$(pwd)
          # Create output filename with timestamp
          OUTPUT_FILE="data/devices/devices_$(date +%Y%m%d_%H%M%S).json"
          # Run the devices collection script
          python scripts/collectors/collect_devices.py --output "$OUTPUT_FILE"
          # Store actual output path for debugging
          echo "Generated file: $OUTPUT_FILE"
        env:
          # Database connection
          DATABASE_URL: ${{ secrets.DATABASE_URL }}

          # Growatt API credentials
          GROWATT_USERNAME: ${{ secrets.GROWATT_USERNAME }}
          GROWATT_PASSWORD: ${{ secrets.GROWATT_PASSWORD }}

          # Optional: Timezone setting
          TZ: "Asia/Bangkok" # Set to Thai timezone
          
      - name: Debug data files
        run: |
          echo "Checking collected data files:"
          ls -la data/devices/
          
      - name: Upload device data as artifact
        uses: actions/upload-artifact@v4
        with:
          name: device-data
          path: data/devices/*.json
          if-no-files-found: warn

# Docs for the Azure Web Apps Deploy action: https://github.com/Azure/webapps-deploy
# More GitHub Actions for Azure: https://github.com/Azure/actions
# More info on Python, GitHub Actions, and Azure App Service: https://aka.ms/python-webapps-actions

name: Build and deploy Python app to Azure Web App - growatt

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read #This is required for actions/checkout

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python version
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"

      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: .venv
          key: ${{ runner.os }}-venv-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-venv-

      - name: Install uv
        run: |
          pip install uv

      - name: Create and start virtual environment with uv
        run: |
          uv venv
          source .venv/bin/activate

      - name: Install dependencies
        run: |
          uv pip install -r requirements.txt

      - name: Security scan
        run: |
          source .venv/bin/activate
          pip install bandit
          bandit -r app/ -f json -o bandit-results.json

      # Optional: Add step to run tests here (PyTest, Django test suites, etc.)

      - name: Zip artifact for deployment
        run: zip release.zip ./* -r

      - name: Upload artifact for deployment jobs
        uses: actions/upload-artifact@v4
        with:
          name: python-app
          path: |
            release.zip
            !.venv/

  deploy-staging:
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: "staging"
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}
    permissions:
      id-token: write #This is required for requesting the JWT
      contents: read #This is required for actions/checkout

    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v4
        with:
          name: python-app

      - name: Unzip artifact for deployment
        run: unzip release.zip

      - name: Login to Azure
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZUREAPPSERVICE_CLIENTID_8FDC7E819D594254BCCC0F90A25E9BD2 }}
          tenant-id: ${{ secrets.AZUREAPPSERVICE_TENANTID_C378D4FE396C4E7CAF2536D505FEFB79 }}
          subscription-id: ${{ secrets.AZUREAPPSERVICE_SUBSCRIPTIONID_35604CF6947C43A5A7818DEBEB35DC64 }}

      - name: "Deploy to Azure Web App"
        uses: azure/webapps-deploy@v3
        id: deploy-to-webapp
        with:
          app-name: "growatt"
          slot-name: "Staging"

      - name: Verify deployment
        run: |
          curl -f https://growatt-staging.azurewebsites.net/health || exit 1

  deploy-production:
    runs-on: ubuntu-latest
    needs: [build, deploy-staging]
    environment:
      name: "production"
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}
    permissions:
      id-token: write #This is required for requesting the JWT
      contents: read #This is required for actions/checkout

    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v4
        with:
          name: python-app

      - name: Unzip artifact for deployment
        run: unzip release.zip

      - name: Login to Azure
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZUREAPPSERVICE_CLIENTID_8FDC7E819D594254BCCC0F90A25E9BD2 }}
          tenant-id: ${{ secrets.AZUREAPPSERVICE_TENANTID_C378D4FE396C4E7CAF2536D505FEFB79 }}
          subscription-id: ${{ secrets.AZUREAPPSERVICE_SUBSCRIPTIONID_35604CF6947C43A5A7818DEBEB35DC64 }}

      - name: "Deploy to Azure Web App"
        uses: azure/webapps-deploy@v3
        id: deploy-to-webapp
        with:
          app-name: "growatt"
          slot-name: "Production"

      - name: Verify deployment
        run: |
          curl -f https://growatt.azurewebsites.net/health || exit 1

      # Azure CLI is pre-installed on GitHub runners
      - name: Azure healthcheck
        run: |
          az webapp show --name growatt --resource-group yourResourceGroup

      - name: Apply Azure tags
        run: |
          az webapp update --name growatt --resource-group yourResourceGroup --set tags.Environment=Production tags.DeploymentDate=$(date +%F)

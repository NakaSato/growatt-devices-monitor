name: Database Report Generation

on:
  schedule:
    # Runs on Monday at 8:00 AM
    - cron: "0 8 * * 1"
    # Runs on Saturday at 8:00 AM
    - cron: "0 8 * * 6"
  workflow_dispatch: # Manual trigger option
    inputs:
      days:
        description: "Number of days to include in the report"
        required: false
        default: "30"
        type: string
      email:
        description: "Email address to send the report to"
        required: false
        type: string

jobs:
  generate_report:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"
          cache: "pip"

      - name: Install Thai fonts
        run: |
          sudo apt-get update
          sudo apt-get install -y fonts-thai-tlwg

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
          pip install -e .  # Install the package in development mode
          pip install pandas matplotlib seaborn  # Install additional required packages

      - name: Setup database and run migrations
        run: |
          export PYTHONPATH=$PYTHONPATH:$(pwd)
          python -m app.db_migration
        env:
          # Database connection
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
          POSTGRES_HOST: ${{ secrets.POSTGRES_HOST }}
          POSTGRES_PORT: ${{ secrets.POSTGRES_PORT }}
          POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
          POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
          POSTGRES_DB: ${{ secrets.POSTGRES_DB }}

      - name: Run database report script
        run: |
          # Add the current directory to PYTHONPATH
          export PYTHONPATH=$PYTHONPATH:$(pwd)

          # Ensure reports directory exists
          mkdir -p reports

          # Get input parameters or use defaults
          DAYS="${{ github.event.inputs.days || '30' }}"
          EMAIL="${{ github.event.inputs.email }}"

          # Run with output filename to make debugging easier
          TIMESTAMP=$(date +%Y%m%d_%H%M%S)
          
          # Set more verbose output for debugging
          set -x
          
          if [ -z "$EMAIL" ]; then
            python scripts/reports/database_report.py --days $DAYS --output "reports/device_report_${TIMESTAMP}.pdf"
          else
            python scripts/reports/database_report.py --days $DAYS --email $EMAIL --output "reports/device_report_${TIMESTAMP}.pdf"
          fi
          
          # Turn off verbose output
          set +x
          
          # Print the output filename for reference
          echo "Generated report: reports/device_report_${TIMESTAMP}.pdf"
        env:
          # Database connection
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
          POSTGRES_HOST: ${{ secrets.POSTGRES_HOST }}
          POSTGRES_PORT: ${{ secrets.POSTGRES_PORT }}
          POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
          POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
          POSTGRES_DB: ${{ secrets.POSTGRES_DB }}

          # Email configuration
          EMAIL_NOTIFICATIONS_ENABLED: "True"
          EMAIL_FROM: ${{ secrets.EMAIL_FROM }}
          EMAIL_TO: ${{ secrets.EMAIL_TO }}
          SMTP_SERVER: ${{ secrets.SMTP_SERVER }}
          SMTP_PORT: ${{ secrets.SMTP_PORT }}
          SMTP_USERNAME: ${{ secrets.SMTP_USERNAME }}
          SMTP_PASSWORD: ${{ secrets.SMTP_PASSWORD }}
          SMTP_USE_TLS: "True"

          # Timezone setting
          TZ: "Asia/Bangkok"

      - name: Debug report files
        run: |
          echo "Checking for generated report files:"
          mkdir -p reports  # Ensure directory exists
          ls -la reports/
          
      - name: Upload report as artifact
        uses: actions/upload-artifact@v4
        with:
          name: database-reports
          path: reports/*.pdf
          if-no-files-found: warn
          retention-days: 14 # Keep reports for 14 days
